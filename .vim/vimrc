set cindent
set ruler
set cursorline
set encoding=utf-8
set expandtab
set hlsearch
set ignorecase
set incsearch
set listchars+=tab:\ \
set mouse=a
set nobomb
set novisualbell
set noerrorbells
set nowrap
set number
set shiftwidth=4
set tabstop=4
set viminfo=
set wildignorecase
set smartcase
set rnu
set noswapfile
set t_Co=256
set showmatch

let g:netrw_liststyle= 3
let g:netrw_browse_split= 3
autocmd FileType netrw setl bufhidden=delete

noremap H 0
noremap J <C-d>
noremap K <C-u>
noremap L $

inoremap kj <esc>
inoremap KJ <esc>

noremap U <C-e>
noremap I <C-y>

map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l

" Visual mode pressing # searches for the current selection
vnoremap <silent> * :<C-u>call VisualSelection('', '')<CR>/<C-R>=@/<CR><CR>

" Return to last edit position when opening files
au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif

" Status line
" Always show the status line
set laststatus=2
" Format the status line
set statusline=\ %{HasPaste()}%F%m%r%h\ %w\ \ CWD:\ %r%{getcwd()}%h\ \ \ Line:\ %l\ \ Column:\ %c

" Move a line of text using ALT+[jk] or Command+[jk] on mac
nmap <M-j> mz:m+<cr>`z
nmap <M-k> mz:m-2<cr>`z
vmap <M-j> :m'>+<cr>`<my`>mzgv`yo`z
vmap <M-k> :m'<-2<cr>`>my`<mzgv`yo`z
if has("mac") || has("macunix")
  nmap <D-j> <M-j>
  nmap <D-k> <M-k>
  vmap <D-j> <M-j>
  vmap <D-k> <M-k>
endif

" Highlighting
autocmd colorscheme * highlight StatusLine cterm=bold  ctermbg=black
autocmd colorscheme * highlight CursorLine cterm=none  ctermbg=black

syntax on
